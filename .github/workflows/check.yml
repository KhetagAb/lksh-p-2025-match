name: check

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

env:
  GO_VERSION: "1.23"
  PYTHON_VERSION: "3.13.5"

jobs:
  core:
    name: Core CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: core/go.sum

      - name: Generate code
        run: make codegen
        working-directory: core/

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        working-directory: core/

      - name: Lint
        run: make check
        working-directory: core/

      - name: Build
        run: make build-local
        working-directory: core/

  core_test:
    name: Core Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: core/go.sum

      - name: Setup Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Generate code
        run: make codegen
        working-directory: core/

      - name: Setup environment
        run: cp .env.example .env.test
        working-directory: core/

      - name: Run tests
        run: make test
        working-directory: core/

  bff:
    name: BFF CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: astral-sh/setup-uv@v2

      - name: Cache UV
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('bff/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Setup environment
        run: make venv
        working-directory: bff/

      - name: Generate code
        run: make codegen
        working-directory: bff/

      - name: Run checks
        run: make check
        working-directory: bff/


  docker_build:
    name: Docker Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ core, bff ]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker buildx build . --file ${{ matrix.service }}/dev.dockerfile
